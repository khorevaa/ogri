#Использовать restler
#Использовать semver

Перем APIКлиент;
Перем НастройкаПрокси;

Процедура ПриСозданииОбъекта(Знач АдресСервера = "")
	
	Если НЕ ЗначениеЗаполнено(АдресСервера) Тогда
		АдресСервера = "https://api.github.com";
	КонецЕсли;
	
	Соединение = Новый HTTPСоединение(АдресСервера);
	
	APIКлиент = Новый КлиентВебAPI();
	Клиент.ИспользоватьСоединение(Соединение);
	
КонецПроцедуры

Процедура УстановитьПрокси(Знач НоваяНастройкаПрокси) Экспорт
	НастройкаПрокси = НоваяНастройкаПрокси;
КонецПроцедуры


Функция ПолучитьИнформациюОРелизахГитхаба(Знач ГитхабРепозиторий)
	
	ГитХабПакет = Новый ОписаниеПакетаGithub(ГитхабРепозиторий);
	
	Если ГитХабПакет.Тег = "latest" Тогда
		ИнформацияОРелизахГитхаба = Клиент.Получить(ГитХабПакет.Releases_API()+"latest");
	Иначе
		ИнформацияОРелизахГитхаба = Клиент.Получить(ГитХабПакет.Releases_API());
	КонецЕсли;
	
	ИнформацияОРелизах = Новый Соответствие;

	Для каждого РелизГитхаб Из ИнформацияОРелизахГитхаба Цикл
		ОписаниеРелиза = НовоеОписаниеРелиза(ВложенияРелиза(РелизГитхаб["prerelease"], РелизГитхаб["assets"]), РелизГитхаб["tarball_url"], РелизГитхаб["zipball_url"])
		ИнформацияОРелизах.Вставить(РелизГитхаб["tag_name"], ОписаниеРелиза);
	КонецЦикла;

	Возврат ИнформацияОРелизах;

КонецФункции

Функция ПолучитьОписаниеРелиза(Знач ГитхабРепозиторий, Знач ВерсияРелиза, Знач ПредварительныйРелиз = Ложь) Экспорт
	
	ИнформацияОРелизах = ПолучитьИнформациюОРелизахГитхаба(ГитхабРепозиторий);

	Для каждого Релиз Из ИнформацияОРелизах Цикл
		
		ВерсияРелиза = Релиз.Ключ;
		ОписаниеРелиза = Релиз.Значение;
		Если Версии.ВерсииРавны(ВерсияРелиза, ВерсияРелиза)
			И ОписаниеРелиза.ПредварительныйРелиз = ПредварительныйРелиз Тогда
			Возврат ОписаниеРелиза
		КонецЕсли;

	КонецЦикла;

	Возврат ПустоеОписаниеРелиза();

КонецФункции

Функция ПолучитьФайл(Знач URLФайла) Экспорт
	
	// TODO: Реализовать функцию

КонецФункции


Процедура УстановитьСервер(Знач АдресСервера) Экспорт
	
	Соединение = Новый HTTPСоединение(АдресСервера);
	Клиент.ИспользоватьСоединение(Соединение);
	
КонецПроцедуры

Функция ПустоеОписаниеРелиза()
	Возврат НовоеОписаниеРелиза(Истина, Новый Массив, "", "");
КонецФункции

Функция НовоеОписаниеРелиза(ПредварительныйРелиз, СтруктураВложений, TarАрхив, ZipАрхив)
	
	ОписаниеРелиза = Новый Структура;
	ОписаниеРелиза.Вставить("ПредварительныйРелиз", ПредварительныйРелиз);
	ОписаниеРелиза.Вставить("Вложения", СтруктураВложений);
	ОписаниеРелиза.Вставить("TarАрхив", TarАрхив);
	ОписаниеРелиза.Вставить("ZipАрхив", ZipАрхив);

	Возврат ОписаниеРелиза;

КонецФункции

Функция ВложенияРелиза(МассивВложений)

	Массив = Новый Массив;
	
	Для каждого Вложение Из МассивВложений Цикл
		Массив.Добавить("ИмяФайла, URLЗагрузки", Вложение["name"], Вложение["browser_download_url"]);
	КонецЦикла;

	Возврат Массив;

КонецФункции

Процедура ИмяПроцедуры()
	
	Клиент = Новый КлиентВебAPI();
	Клиент.ИспользоватьСоединение("httpСоединениеСНастроеннойАвторизациейСертификатамиETC");
	ИнформацияОПродажах = Клиент.Получить("sales/totals");
	
	Для Каждого Инфо Из ИнформацияОПродажах Цикл
	  Сообщить(СтрШаблон("Продано товара %1 на сумму %2", Инфо["nomenclature"], Инфо["sum"]));
	КонецЦикла;

КонецПроцедуры

