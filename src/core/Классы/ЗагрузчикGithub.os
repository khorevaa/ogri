#Использовать restler
#Использовать semver

Перем APIКлиент;
Перем НастройкаПрокси;
Перем Лог;

Процедура ПриСозданииОбъекта(Знач АдресСервера = "")
	
	Если НЕ ЗначениеЗаполнено(АдресСервера) Тогда
		АдресСервера = "https://api.github.com";
	КонецЕсли;
	
	Соединение = Новый HTTPСоединение(АдресСервера);
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("User-Agent", "Awesome-Octocat-App");

	APIКлиент = Новый КлиентВебAPI();
	APIКлиент.ИспользоватьСоединение(Соединение);
	APIКлиент.УстановитьЗаголовки(Заголовки);
	
КонецПроцедуры

Процедура УстановитьПрокси(Знач НоваяНастройкаПрокси) Экспорт
	НастройкаПрокси = НоваяНастройкаПрокси;
КонецПроцедуры

Функция ПолучитьИнформациюОРелизахГитхаба(Знач ГитхабРепозиторий)
	
	ГитХабПакет = Новый ОписаниеПакетаGithub(ГитхабРепозиторий);
	
	Если ГитХабПакет.Тег = "latest" Тогда
		Лог.Отладка("Запрос ресурса: %1", ГитХабПакет.Releases_API()+"/latest");
		ИнформацияОРелизахГитхаба = APIКлиент.Получить(ГитХабПакет.Releases_API()+"/latest");
	Иначе
		Лог.Отладка("Запрос ресурса: %1", ГитХабПакет.Releases_API());
		ИнформацияОРелизахГитхаба = APIКлиент.Получить(ГитХабПакет.Releases_API());
	КонецЕсли;
	
	ИнформацияОРелизах = Новый Соответствие;

	Лог.Отладка("Тип ответа от сервера <%1>", ТипЗнч(ИнформацияОРелизахГитхаба));

	Если ТипЗнч(ИнформацияОРелизахГитхаба) = Тип("Соответствие") Тогда
		
		РелизГитхаб = ИнформацияОРелизахГитхаба;
		ОписаниеРелиза = НовоеОписаниеРелиза(РелизГитхаб["tag_name"],
											РелизГитхаб["prerelease"],
											ВложенияРелиза(РелизГитхаб["assets"]),
											РелизГитхаб["tarball_url"],
											РелизГитхаб["zipball_url"]);
		ИнформацияОРелизах.Вставить(ГитХабПакет.Тег, ОписаниеРелиза);
		
	Иначе

		Для каждого РелизГитхаб Из ИнформацияОРелизахГитхаба Цикл
			ОписаниеРелиза = НовоеОписаниеРелиза(РелизГитхаб["tag_name"],
												РелизГитхаб["prerelease"],
												ВложенияРелиза(РелизГитхаб["assets"]),
												РелизГитхаб["tarball_url"],
												РелизГитхаб["zipball_url"]);
			ИнформацияОРелизах.Вставить(ОписаниеРелиза.ВерсияРелиза, ОписаниеРелиза);
			//Лог.Отладка("Найден релиз <%1>", ОписаниеРелиза.ВерсияРелиза);

		КонецЦикла;

	КонецЕсли;
	
	Возврат ИнформацияОРелизах;

КонецФункции

Функция ПолучитьОписаниеРелиза(Знач ГитхабРепозиторий, Знач ПредварительныйРелиз = Ложь) Экспорт
	
	ИнформацияОРелизах = ПолучитьИнформациюОРелизахГитхаба(ГитхабРепозиторий);

	ГитХабПакет = Новый ОписаниеПакетаGithub(ГитхабРепозиторий);

	Если ГитХабПакет.Тег = "latest"
		И ИнформацияОРелизах.Количество() = 1 Тогда
	
		Возврат ИнформацияОРелизах[ГитХабПакет.Тег];

	КонецЕсли;

	Лог.Отладка("Ищю релиз <%1>", ГитХабПакет.Тег);

	Для каждого Релиз Из ИнформацияОРелизах Цикл
				
		ВерсияРелиза = Релиз.Ключ;
		ОписаниеРелиза = Релиз.Значение;
		Если Версии.ВерсииРавны(ВерсияРелиза, ГитХабПакет.Тег) Тогда
			Если ОписаниеРелиза.ПредварительныйРелиз 
				И НЕ ПредварительныйРелиз Тогда
				Продолжить;
			КонецЕсли;

			Возврат ОписаниеРелиза
		КонецЕсли;

	КонецЦикла;

	Возврат ПустоеОписаниеРелиза();

КонецФункции

Функция ПолучитьФайл(Знач URLФайла, Знач ИмяФайла) Экспорт
	
	ПутьКСохраняемомуФайлу = ОбъединитьПути(ВременныеФайлы.СоздатьКаталог(),ИмяФайла);
	
	СоединениеПолучепнияФайлов = Новый HTTPСоединение("https://github.com");

	Ресурс = СтрЗаменить(URLФайла, "https://github.com/", "");
	Запрос = Новый HTTPЗапрос(Ресурс);
	
	Ответ = СоединениеПолучепнияФайлов.Получить(Запрос, ПутьКСохраняемомуФайлу);
	
	Если Ответ.КодСостояния <> 200 Тогда
		ВызватьИсключение Ответ.КодСостояния;
	КонецЕсли;

	// TODO: Реализовать функцию

	Возврат ПутьКСохраняемомуФайлу;

КонецФункции


Процедура УстановитьСервер(Знач АдресСервера) Экспорт
	
	Соединение = Новый HTTPСоединение(АдресСервера);
	APIКлиент.ИспользоватьСоединение(Соединение);
	
КонецПроцедуры

Функция ПустоеОписаниеРелиза()
	Возврат НовоеОписаниеРелиза("", Истина, Новый Массив, "", "");
КонецФункции

Функция НовоеОписаниеРелиза(ВерсияРелиза, ПредварительныйРелиз, СтруктураВложений, TarАрхив, ZipАрхив)
	
	ОписаниеРелиза = Новый Структура;
	ОписаниеРелиза.Вставить("ВерсияРелиза", ВерсияРелиза);
	ОписаниеРелиза.Вставить("ПредварительныйРелиз", ПредварительныйРелиз);
	ОписаниеРелиза.Вставить("Вложения", СтруктураВложений);
	ОписаниеРелиза.Вставить("TarАрхив", TarАрхив);
	ОписаниеРелиза.Вставить("ZipАрхив", ZipАрхив);

	Возврат ОписаниеРелиза;

КонецФункции

Функция ВложенияРелиза(МассивВложений)

	Массив = Новый Массив;
	
	Для каждого Вложение Из МассивВложений Цикл
		Массив.Добавить(Новый Структура("ИмяФайла, URLЗагрузки", Вложение["name"], Вложение["browser_download_url"]));
	КонецЦикла;

	Возврат Массив;

КонецФункции

Лог = Логирование.ПолучитьЛог("oscript.lib.ogri");
Лог.УстановитьУровень(УровниЛога.Отладка);